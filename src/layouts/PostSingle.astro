---
import { Picture } from 'astro:assets';
import Share from '@/components/Share.astro';
import TextAds from '@/components/TextAds.astro';
import config from '@/config/config.json';
import YandexRelatedAds from '@/components/YandexRelatedAds';
import { getSinglePage } from '@/lib/contentParser.astro';
import dateFormat from '@/lib/utils/dateFormat';
import similerItems from '@/lib/utils/similarItems';
import { humanize, markdownify, slugify } from '@/lib/utils/textConverter';
import CircularNavigation from './components/CircularNavigation.astro';
import AdfoxTocAds from './components/AdfoxTocAds.astro';
import CommentBlock from './components/CommentBlock.vue';

const { blog_folder } = config.settings;
const posts = await getSinglePage(blog_folder);
const { post, style, prevPost, nextPost, type } = Astro.props;
const similarPosts = similerItems(post, posts, post.slug);
const { Content } = await post.render();
const { title, description, author, categories, image, date, tags, slug, lastmod } = post.data;
const className = Astro.props.class;
// console.log(post.data);
// console.log(post.data);
// console.log(lastmod);
---

<!-- <TextAds class="fade-in-bottom fluid:my-2" style="--delay: .8s;" /> -->
<article class:list={['article', className]}>
	<div class="container">
		<div class="article__header">
			<ul class="article__categories categories">
				{
					categories.map((category: string, index: number) => (
						<li class="categories__item">
							<a href={`/category/${slugify(category)}`} class="categories__link">
								{humanize(category)}
								{index !== categories.length - 1 && ','}
							</a>
						</li>
					))
				}
			</ul>

			<h1 class="article__title text-wrap">
				{title}
			</h1>

			<ul class="article__tags tags">
				{
					tags.map((tag: string) => (
						<li class="tags__item">
							<a class="tags__link" href={`/tag/${slugify(tag)}`}>
								{humanize(tag)}
							</a>
						</li>
					))
				}
			</ul>

			<time class="article__date">
				Опубликовано {dateFormat(date)} by {humanize(author)}
			</time>
			<time class="article__date">
				{lastmod ? 'Последнее изменение: ' + dateFormat(lastmod) : null}
			</time>
		</div>

		{
			image && (
				<article>
					<figure class="article__image">
						<Picture
							src={image}
							alt={title}
							class="aspect-video h-full w-full object-cover object-center"
							formats={['avif', 'webp']}
							loading="eager"
							transition:animate={'initial'}
							transition:name={`blog-image-${post.slug}`}
						/>
					</figure>
				</article>
			)
		}

		<div
			class="article__content prose prose-zinc max-w-full break-words text-blue dark:prose-invert prose-headings:text-blue prose-p:text-balance prose-a:no-underline hover:prose-a:underline prose-figure:bg-gray-light prose-figure:p-10 prose-figcaption:text-dark dark:prose-figure:bg-dark dark:prose-figcaption:text-white"
		>
			<AdfoxTocAds blockId="adfox_17062261612859555" />

			<div class="article__meta">
				<Share
					class={'article__share'}
					title={title}
					description={description}
					slug={post.slug}
					image={image}
				/>

				<a class="article__meta-section" href="#comments"> Комментарии</a>
			</div>

			<Content />

			<Share
				class={'article__share'}
				title={title}
				description={description}
				slug={post.slug}
				image={image}
			/>

			<CircularNavigation
				class="article__navigation"
				prevPost={prevPost}
				nextPost={nextPost}
				type={type}
			/>
		</div>
	</div>
</article>

<div class="container">
	<YandexRelatedAds client:load />
</div>

<CommentBlock client:only />

<style>
	.article {
		@apply bg-box text-blue fluid:rounded-[32px] fluid:px-2 fluid:pb-2 fluid:pt-10 dark:bg-box-dark;

		&__header {
			@apply flex flex-col items-center justify-center fluid:gap-y-3 fluid:pb-5;
		}

		&__categories {
		}

		&__title {
			@apply m-0 text-center font-medium text-blue fluid:px-4 fluid:text-5xl lg:fluid:text-6xl dark:text-white;
		}

		&__tags {
		}

		&__date {
			@apply font-medium text-blue text-lg;
		}

		&__image {
			@apply m-auto max-w-2xl overflow-hidden fluid:rounded-[36px];
		}

		&__meta {
			@apply flex flex-wrap items-center py-5 fluid:gap-3;
		}

		&__share {
		}

		&__navigation {
			@apply justify-start fluid:mt-2.5;
		}
		&__meta-section {
			@apply text-blue underline hover:no-underline fluid:text-2xl dark:text-white;
		}

		&__content {
			@apply relative fluid:px-2.5 fluid:lg:px-5;
		}
	}

	.comments {
		@apply max-w-5xl;
		iframe {
			@apply max-w-4xl;
		}
	}

	.categories,
	.tags {
		@apply flex flex-wrap items-center justify-center fluid:gap-3;
		&__item {
		}

		&__link {
			@apply rounded-full font-medium text-blue transition-colors fluid:px-3 fluid:py-0.5;
		}
	}

	.tags {
		&__link {
			/* @apply ; */
		}
	}

	.remark-oembed-inline,
	.remark-oembed-anchor {
		@apply w-full [&_iframe]:aspect-video [&_iframe]:h-full [&_iframe]:w-full;
	}
</style>
