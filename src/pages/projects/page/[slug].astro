---
export const prerender = true;
// import ProjectCard from '@/components/ProjectCard.astro';
import Pagination from '@/components/Pagination.astro';
import config from '@/config/config.json';
import Base from '@/layouts/Base.astro';
import { getSinglePage } from '@/lib/contentParser.astro';
import { getAllTaxonomy, getTaxonomy } from '@/lib/taxonomyParser.astro';
import { sortByDate } from '@/lib/utils/sortFunctions';
import PageHeader from '@/partials/PageHeader.astro';
import PostSidebar from '@/partials/PostSidebar.astro';
import { getEntryBySlug } from 'astro:content';
import WorksBlock from '@/components/WorksBlock.astro';
import CtaBlock from '@/components/CtaBlock.astro';

const { projects_folder } = config.settings;
const { slug } = Astro.params;
const postIndex = await getEntryBySlug<any, string>(projects_folder, '-index');
const posts = await getSinglePage(projects_folder);
const allCategories = await getAllTaxonomy(projects_folder, 'categories');
const categories = await getTaxonomy(projects_folder, 'categories');
const tags = await getTaxonomy(projects_folder, 'tags');
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentProjects = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
	const posts = await getSinglePage(config.settings.projects_folder);
	const totalPages = Math.ceil(posts.length / config.settings.pagination);
	const paths = [];

	for (let i = 1; i < totalPages; i++) {
		paths.push({
			params: {
				slug: (i + 1).toString(),
			},
		});
	}
	return paths;
}
---

<Base
	title={`Кейсы. Страница ${currentPage}. ${postIndex.data.title}`}
	meta_title={`Кейсы. Страница ${currentPage}. ${postIndex.data.meta_title}`}
	image={postIndex.data.image}
	description={`Fullstack проекты на next.js, react, astro, vue, nuxt, svelte сделанные мной. Страница ${currentPage}. ${postIndex.data.description}`}
>
	<div class="blocks">
		<div class="blocks__container container">
			<WorksBlock
				sectionTitle={`Frontend проекты: страница ${currentPage}`}
				class=""
				works={currentProjects}
			/>
		</div>
		<div class="blocks__container container">
			<Pagination section={projects_folder} currentPage={currentPage} totalPages={totalPages} />
		</div>
		<div class="blocks__container container">
			<CtaBlock id="cta" class=""  />
		</div>
	</div>
</Base>
